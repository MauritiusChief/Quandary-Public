Question 5

How important are if statements for making immutable Quandary be Turing-complete?
For example, can you write a factorial function (assume unbounded integer arithmetic) or any
of the functions in the previous problems without if statements?

How important is recursion for making immutable Quandary be Turing-complete? For exam-
ple, can you write a factorial function (assume unbounded integer arithmetic) or any of the
functions in the previous problems without recursion (including mutual recursion)

---

If Quandry does not have if statements, then it is not Turing complete, because it cannot compute a factorial function with unbounded input. In a Quandry program, all inputs will follow the same code path, and knowing that this must eventually terminate, we know there is a maximum size input that the program will work with.

If Quandry does not support recursion, then it is not Turing complete, because it cannot compute a factorial function with unbounded input. It is possible to expand all function calls so that there is a single, large main function, which means that there is a finite amount of operations that the program can do, and hence a maximum size input that it will work with.
